[{"/home/keith/code/keith-shep/react-unsplash/src/index.jsx":"1","/home/keith/code/keith-shep/react-unsplash/src/App.jsx":"2","/home/keith/code/keith-shep/react-unsplash/src/Post.jsx":"3","/home/keith/code/keith-shep/react-unsplash/src/PostList.jsx":"4","/home/keith/code/keith-shep/react-unsplash/src/Navbar.jsx":"5"},{"size":199,"mtime":1609819877195,"results":"6","hashOfConfig":"7"},{"size":2101,"mtime":1609930331173,"results":"8","hashOfConfig":"7"},{"size":482,"mtime":1609864227327,"results":"9","hashOfConfig":"7"},{"size":313,"mtime":1609922230872,"results":"10","hashOfConfig":"7"},{"size":236,"mtime":1609930383490,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"4bqpr9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/keith/code/keith-shep/react-unsplash/src/index.jsx",[],["25","26"],"/home/keith/code/keith-shep/react-unsplash/src/App.jsx",["27","28"],"import React, { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n// import { createApi } from 'unsplash-js';\nimport './App.css';\nimport PostList from './PostList'\nimport Navbar from './Navbar'\n\nconst App = () => {\n  const accessKeyUnsplash = '6c446b49b72a4c559d9b9d67183d5c1de1981d16f309063c3b994086e6ce1a26';\n  const baseUrlUnsplash = 'https://api.unsplash.com';\n\n  const [dataLength, setDataLength] = useState(0);\n  const [items, setItems] = useState([]);\n  const [query, setQuery] = useState('london');\n  const [page, setPage] = useState(50);\n\n  // Init first 10 posts\n  useEffect(() => {\n    setPage(page+1)\n    const url = `${baseUrlUnsplash}/search/photos?query=${query}&page=${page}&client_id=${accessKeyUnsplash}`\n\n    fetch(url, { headers :\n      { 'Content-Type': 'application/json',\n        'Accept': 'application/json' }\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log('init data')\n        setItems(data.results)\n        setDataLength(data.results.length)\n      })\n  }, [])\n\n  // Init more posts after the initial 10\n  const loadMoreData = () => {\n    setPage(page+1)\n    const url = `${baseUrlUnsplash}/search/photos?query=${query}&page=${page}&client_id=${accessKeyUnsplash}`\n\n    fetch(url, { headers :\n      { 'Content-Type': 'application/json',\n        'Accept': 'application/json' }\n      })\n      .then(response => response.json())\n      .then(data => {\n        console.log('loading next 10 posts...')\n        setDataLength(dataLength + data.results.length)\n        setItems(items.concat(data.results))\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <Navbar />\n        <div className=\"container col-md-6\">\n          <h2 className=\"text-secondary\">Pictures of \"{query}\"</h2>\n          <InfiniteScroll\n            dataLength={dataLength}\n            next={loadMoreData}\n            hasMore={true}\n            loader={<h4>Loading...</h4>}\n            >\n              <PostList items={items} />\n          </InfiniteScroll>\n        </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n",["29","30"],"/home/keith/code/keith-shep/react-unsplash/src/Post.jsx",[],"/home/keith/code/keith-shep/react-unsplash/src/PostList.jsx",[],"/home/keith/code/keith-shep/react-unsplash/src/Navbar.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":14,"column":17,"nodeType":"37","messageId":"38","endLine":14,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":32,"column":6,"nodeType":"41","endLine":32,"endColumn":8,"suggestions":"42"},{"ruleId":"31","replacedBy":"43"},{"ruleId":"33","replacedBy":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'setQuery' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'query'. Either include them or remove the dependency array. You can also do a functional update 'setPage(p => ...)' if you only need 'page' in the 'setPage' call.","ArrayExpression",["47"],["45"],["46"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [page, query]",{"range":"50","text":"51"},[1075,1077],"[page, query]"]